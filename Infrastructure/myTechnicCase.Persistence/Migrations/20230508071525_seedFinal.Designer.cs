// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using myTechnicCase.Persistence.DataContext;

#nullable disable

namespace myTechnicCase.Persistence.Migrations
{
    [DbContext(typeof(MyTechnicDbContext))]
    [Migration("20230508071525_seedFinal")]
    partial class seedFinal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("myTechnicCase.Domain.Entity.Personnel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonnelCode")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Personnels");

                    b.HasData(
                        new
                        {
                            Id = 12,
                            Active = true,
                            Address = "Maltepe/Istanbul",
                            Email = "erhanozgan@gmail.com",
                            Name = "Erhan",
                            PersonnelCode = 337,
                            Phone = "+905534535452",
                            Surname = "OZGAN",
                            Title = "Dr",
                            UserName = "erhanozgan"
                        },
                        new
                        {
                            Id = 21,
                            Active = true,
                            Address = "Kartal/Istanbul",
                            Email = "deryasef@gmail.com",
                            Name = "Derya",
                            PersonnelCode = 112,
                            Phone = "+905533334455",
                            Surname = "SEFEROGLU",
                            Title = "Op.Dr",
                            UserName = "deryasef"
                        },
                        new
                        {
                            Id = 31,
                            Active = true,
                            Address = "Sariyer/Istanbul",
                            Email = "alyaozgan@gmail.com",
                            Name = "Alya",
                            PersonnelCode = 123,
                            Phone = "+905324456767",
                            Surname = "OZGAN",
                            Title = "Student",
                            UserName = "alyaozgan"
                        },
                        new
                        {
                            Id = 41,
                            Active = true,
                            Address = "Alsancak/Izmir",
                            Email = "ekremdemir@gmail.com",
                            Name = "Ekrem",
                            PersonnelCode = 887,
                            Phone = "+05543431212",
                            Surname = "DEMIR",
                            Title = "Controller",
                            UserName = "ekremdemir"
                        });
                });

            modelBuilder.Entity("myTechnicCase.Domain.Entity.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            Id = 111,
                            EndDate = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Morning Shift",
                            StartDate = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 1,
                            Type = "Half Time"
                        },
                        new
                        {
                            Id = 222,
                            EndDate = new DateTime(2023, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Night Shift",
                            StartDate = new DateTime(2023, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TeamId = 2,
                            Type = "Full Time"
                        });
                });

            modelBuilder.Entity("myTechnicCase.Domain.Entity.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupervisorPersonnelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A Team",
                            SupervisorPersonnelId = 12
                        },
                        new
                        {
                            Id = 2,
                            Name = "B Team",
                            SupervisorPersonnelId = 21
                        },
                        new
                        {
                            Id = 3,
                            Name = "C Team",
                            SupervisorPersonnelId = 31
                        });
                });

            modelBuilder.Entity("myTechnicCase.Domain.Entity.Personnel", b =>
                {
                    b.HasOne("myTechnicCase.Domain.Entity.Team", "TeamFk")
                        .WithMany("Personnels")
                        .HasForeignKey("TeamId");

                    b.Navigation("TeamFk");
                });

            modelBuilder.Entity("myTechnicCase.Domain.Entity.Shift", b =>
                {
                    b.HasOne("myTechnicCase.Domain.Entity.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("myTechnicCase.Domain.Entity.Team", b =>
                {
                    b.Navigation("Personnels");
                });
#pragma warning restore 612, 618
        }
    }
}
